{"ast":null,"code":"var _jsxFileName = \"/Users/adamheeps/development/blog-with-Node-React/src/client/components/DBPostForm/DBPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./DBPostForm.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DBPostForm(props) {\n  _s();\n\n  //improvement suggestion - could our state could be stored directly in a blogger object?\n  var [name, setName] = React.useState(\"\");\n  var [city, setCity] = React.useState(\"\");\n  var [blogText, setBlogText] = React.useState(\"\");\n  const blogger = {\n    \"name\": name,\n    \"city\": city,\n    \"blogText\": blogText\n  };\n\n  const dbPost = b => {\n    axios.post(\"http://localhost:3001/blogger\", b).then(() => console.log(\"User Created\"));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dbPost(blogger); // No logo on the submit blog page so I have removed it.\n    // props.logoSpeedUp();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DBPostForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Post a record to the database:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name field\",\n            value: name,\n            onChange: n => setName(n.target.value),\n            className: \"input-box\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city field\",\n            value: city,\n            onChange: c => setCity(c.target.value),\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Your blog:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"blog field\",\n            value: blogText,\n            onChange: c => setBlogText(c.target.value),\n            className: \"input-box\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          className: \"SubmitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DBPostForm, \"m9djzsT+gZPX4bOSuR+6H2CctKQ=\");\n\n_c = DBPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DBPostForm\");","map":{"version":3,"sources":["/Users/adamheeps/development/blog-with-Node-React/src/client/components/DBPostForm/DBPostForm.js"],"names":["React","axios","DBPostForm","props","name","setName","useState","city","setCity","blogText","setBlogText","blogger","dbPost","b","post","then","console","log","handleSubmit","event","preventDefault","n","target","value","c"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./DBPostForm.css\";\nimport axios from \"axios\";\n\nexport default function DBPostForm(props) {\n\n  //improvement suggestion - could our state could be stored directly in a blogger object?\n  var [name, setName] = React.useState(\"\");\n  var [city, setCity] = React.useState(\"\");\n  var [blogText, setBlogText] = React.useState(\"\");\n\n  const blogger = {\n    \"name\": name,\n    \"city\": city,\n    \"blogText\": blogText\n};\n\nconst dbPost = (b) => {\n    axios\n      .post(\"http://localhost:3001/blogger\", b)\n      .then(() => console.log(\"User Created\"));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dbPost(blogger);\n    // No logo on the submit blog page so I have removed it.\n    // props.logoSpeedUp();\n  };\n\n  return (\n    <div className=\"DBPostForm\">\n      <h3>Post a record to the database:</h3>\n      <form onSubmit={handleSubmit}>\n        <div className='user-input'>\n          <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name field\"\n            value={name}\n            onChange={(n) => setName(n.target.value)}\n            className='input-box'\n            required\n          />\n        </label>\n        </div>\n        <div className='user-input'>\n          <label>\n          City:\n          <input\n            type=\"text\"\n            name=\"city field\"\n            value={city}\n            onChange={(c) => setCity(c.target.value)}\n            className='input-box'\n          />\n          </label>\n          </div>\n          <div className='user-input'>\n          <label>\n          Your blog:\n          <input\n            type=\"text\"\n            name=\"blog field\"\n            value={blogText}\n            onChange={(c) => setBlogText(c.target.value)}\n            className='input-box'\n            required\n          />\n        </label>\n        </div>\n        <div>\n        <input type=\"submit\" value=\"Submit\" className=\"SubmitButton\"/>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jordanthomson/code/blog-with-Node-React/src/client/components/DBGetForm/DBGetForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./DBGetForm.css\";\nimport axios from \"axios\";\nimport DisplayBlog from \"../DisplayBlog/DisplayBlog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DBPostForm(props) {\n  _s();\n\n  //improvement suggestion - could our state could be stored directly in a blogger object?\n  var [id, setID] = useState(\"\");\n  var [name, setName] = useState();\n  var [city, setCity] = useState(\"\");\n  const [arrayOfBlogs, setArrayOfBlogs] = useState([]);\n\n  const dbGet = id => {\n    axios.get(`http://localhost:3001/blogger/${id}`).then(res => {\n      // console.log(response.headers.name + \"we're logging line 17\")\n      setName(res.data.name);\n      setCity(res.data.city);\n\n      const updateArrayOfBlogs = res => {\n        let newarray = [...arrayOfBlogs].push({\n          arrayname: res.data.name,\n          arraycity: res.data.city\n        });\n        return setArrayOfBlogs(newarray);\n      }; // setName(res.name);\n\n    }); // return console.log(response + \" on line 20\");\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dbGet(id); // No logo on the submit blog page so I have removed it.\n    // props.logoSpeedUp();\n  };\n\n  const displayBlogs = arr => {\n    // return <DisplayBlog name={arr[0].arrayname} city={arr[0].arraycity}/>\n    return console.log(arr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DBGetForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Get a record from the database:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Blogger ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"id\",\n          name: \"id\",\n          value: id,\n          onChange: n => setID(n.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dbDisplay\",\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dbDisplay\",\n      children: [\"City: \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), displayBlogs(arrayOfBlogs)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DBPostForm, \"otix2x1bcvxSuKHS7r0+UdXhXrU=\");\n\n_c = DBPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DBPostForm\");","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/src/client/components/DBGetForm/DBGetForm.js"],"names":["React","useState","axios","DisplayBlog","DBPostForm","props","id","setID","name","setName","city","setCity","arrayOfBlogs","setArrayOfBlogs","dbGet","get","then","res","data","updateArrayOfBlogs","newarray","push","arrayname","arraycity","handleSubmit","event","preventDefault","displayBlogs","arr","console","log","n","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAExC;AACA,MAAI,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA1B;AACA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAA9B;AACA,MAAI,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMa,KAAK,GAAIR,EAAD,IAAQ;AACpBJ,IAAAA,KAAK,CACFa,GADH,CACQ,iCAAgCT,EAAG,EAD3C,EAEGU,IAFH,CAESC,GAAD,IAAS;AACb;AACAR,MAAAA,OAAO,CAACQ,GAAG,CAACC,IAAJ,CAASV,IAAV,CAAP;AACAG,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASR,IAAV,CAAP;;AACA,YAAMS,kBAAkB,GAAIF,GAAD,IAAS;AAClC,YAAIG,QAAQ,GAAG,CAAC,GAAGR,YAAJ,EAAkBS,IAAlB,CAAuB;AACpCC,UAAAA,SAAS,EAAEL,GAAG,CAACC,IAAJ,CAASV,IADgB;AAEpCe,UAAAA,SAAS,EAAEN,GAAG,CAACC,IAAJ,CAASR;AAFgB,SAAvB,CAAf;AAIA,eAAOG,eAAe,CAACO,QAAD,CAAtB;AACD,OAND,CAJa,CAWb;;AACD,KAdH,EADoB,CAgBlB;AACH,GAjBD;;AAmBA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAZ,IAAAA,KAAK,CAACR,EAAD,CAAL,CAF8B,CAG9B;AACA;AACD,GALD;;AAOA,QAAMqB,YAAY,GAAIC,GAAD,IAAS;AAC5B;AACA,WAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACE;AAAA,+CAEE;AACE,UAAA,IAAI,EAAC,IADP;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,KAAK,EAAElB,EAHT;AAIE,UAAA,QAAQ,EAAGyB,CAAD,IAAOxB,KAAK,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJxB;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,2BACSzB,IADT;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,2BACSE,IADT;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAqBGiB,YAAY,CAACf,YAAD,CArBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAhEuBR,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react';\nimport \"./DBGetForm.css\";\nimport axios from \"axios\";\nimport DisplayBlog from \"../DisplayBlog/DisplayBlog\";\n\nexport default function DBPostForm(props) {\n\n  //improvement suggestion - could our state could be stored directly in a blogger object?\n  var [id, setID] = useState(\"\");\n  var [name, setName] = useState();\n  var [city, setCity] = useState(\"\");\n  const [arrayOfBlogs, setArrayOfBlogs] = useState([])\n\n  const dbGet = (id) => {\n    axios\n      .get(`http://localhost:3001/blogger/${id}`)\n      .then((res) => {\n        // console.log(response.headers.name + \"we're logging line 17\")\n        setName(res.data.name);\n        setCity(res.data.city);\n        const updateArrayOfBlogs = (res) => {\n          let newarray = [...arrayOfBlogs].push({\n            arrayname: res.data.name,\n            arraycity: res.data.city\n          })\n          return setArrayOfBlogs(newarray);\n        }\n        // setName(res.name);\n      });\n      // return console.log(response + \" on line 20\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();   \n    dbGet(id);\n    // No logo on the submit blog page so I have removed it.\n    // props.logoSpeedUp();\n  };\n\n  const displayBlogs = (arr) => {\n    // return <DisplayBlog name={arr[0].arrayname} city={arr[0].arraycity}/>\n    return console.log(arr)\n  }\n\n  return (\n    <div className=\"DBGetForm\">\n      <h3>Get a record from the database:</h3>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Blogger ID:\n          <input\n            type=\"id\"\n            name=\"id\"\n            value={id}\n            onChange={(n) => setID(n.target.value)}\n            required\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <div className=\"dbDisplay\">\n        Name: {name}\n      </div>\n      <div className=\"dbDisplay\">\n        City: {city}\n      </div>\n      {displayBlogs(arrayOfBlogs)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
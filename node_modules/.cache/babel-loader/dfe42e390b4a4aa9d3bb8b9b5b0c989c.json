{"ast":null,"code":"var parse = require('./parse');\n/**\n * Converts a string to command line args, in particular\n * groups together quoted values.\n * This is a utility function to allow calling nodemon as a required\n * library, but with the CLI args passed in (instead of an object).\n *\n * @param  {String} string\n * @return {Array}\n */\n\n\nfunction stringToArgs(string) {\n  var args = [];\n  var parts = string.split(' ');\n  var length = parts.length;\n  var i = 0;\n  var open = false;\n  var grouped = '';\n  var lead = '';\n\n  for (; i < length; i++) {\n    lead = parts[i].substring(0, 1);\n\n    if (lead === '\"' || lead === '\\'') {\n      open = lead;\n      grouped = parts[i].substring(1);\n    } else if (open && parts[i].slice(-1) === open) {\n      open = false;\n      grouped += ' ' + parts[i].slice(0, -1);\n      args.push(grouped);\n    } else if (open) {\n      grouped += ' ' + parts[i];\n    } else {\n      args.push(parts[i]);\n    }\n  }\n\n  return args;\n}\n\nmodule.exports = {\n  parse: function (argv) {\n    if (typeof argv === 'string') {\n      argv = stringToArgs(argv);\n    }\n\n    return parse(argv);\n  }\n};","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/node_modules/nodemon/lib/cli/index.js"],"names":["parse","require","stringToArgs","string","args","parts","split","length","i","open","grouped","lead","substring","slice","push","module","exports","argv"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,MAAIC,IAAI,GAAG,EAAX;AAEA,MAAIC,KAAK,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAAZ;AACA,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,IAAI,GAAG,KAAX;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,SAAOH,CAAC,GAAGD,MAAX,EAAmBC,CAAC,EAApB,EAAwB;AACtBG,IAAAA,IAAI,GAAGN,KAAK,CAACG,CAAD,CAAL,CAASI,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAP;;AACA,QAAID,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,IAA7B,EAAmC;AACjCF,MAAAA,IAAI,GAAGE,IAAP;AACAD,MAAAA,OAAO,GAAGL,KAAK,CAACG,CAAD,CAAL,CAASI,SAAT,CAAmB,CAAnB,CAAV;AACD,KAHD,MAGO,IAAIH,IAAI,IAAIJ,KAAK,CAACG,CAAD,CAAL,CAASK,KAAT,CAAe,CAAC,CAAhB,MAAuBJ,IAAnC,EAAyC;AAC9CA,MAAAA,IAAI,GAAG,KAAP;AACAC,MAAAA,OAAO,IAAI,MAAML,KAAK,CAACG,CAAD,CAAL,CAASK,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAjB;AACAT,MAAAA,IAAI,CAACU,IAAL,CAAUJ,OAAV;AACD,KAJM,MAIA,IAAID,IAAJ,EAAU;AACfC,MAAAA,OAAO,IAAI,MAAML,KAAK,CAACG,CAAD,CAAtB;AACD,KAFM,MAEA;AACLJ,MAAAA,IAAI,CAACU,IAAL,CAAUT,KAAK,CAACG,CAAD,CAAf;AACD;AACF;;AAED,SAAOJ,IAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAAE,UAAUiB,IAAV,EAAgB;AACrB,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,MAAAA,IAAI,GAAGf,YAAY,CAACe,IAAD,CAAnB;AACD;;AAED,WAAOjB,KAAK,CAACiB,IAAD,CAAZ;AACD;AAPc,CAAjB","sourcesContent":["var parse = require('./parse');\n\n/**\n * Converts a string to command line args, in particular\n * groups together quoted values.\n * This is a utility function to allow calling nodemon as a required\n * library, but with the CLI args passed in (instead of an object).\n *\n * @param  {String} string\n * @return {Array}\n */\nfunction stringToArgs(string) {\n  var args = [];\n\n  var parts = string.split(' ');\n  var length = parts.length;\n  var i = 0;\n  var open = false;\n  var grouped = '';\n  var lead = '';\n\n  for (; i < length; i++) {\n    lead = parts[i].substring(0, 1);\n    if (lead === '\"' || lead === '\\'') {\n      open = lead;\n      grouped = parts[i].substring(1);\n    } else if (open && parts[i].slice(-1) === open) {\n      open = false;\n      grouped += ' ' + parts[i].slice(0, -1);\n      args.push(grouped);\n    } else if (open) {\n      grouped += ' ' + parts[i];\n    } else {\n      args.push(parts[i]);\n    }\n  }\n\n  return args;\n}\n\nmodule.exports = {\n  parse: function (argv) {\n    if (typeof argv === 'string') {\n      argv = stringToArgs(argv);\n    }\n\n    return parse(argv);\n  },\n};"]},"metadata":{},"sourceType":"script"}
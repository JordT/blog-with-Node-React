{"ast":null,"code":"var _jsxFileName = \"/Users/jordanthomson/code/blog-with-Node-React/src/client/components/DBGetForm/DBGetForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./DBGetForm.css\";\nimport axios from \"axios\";\nimport DisplayBlog from \"../DisplayBlog/DisplayBlog\";\nimport { getDefaultNormalizer } from \"@testing-library/dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DBPostForm(props) {\n  _s();\n\n  //improvement suggestion - could our state could be stored directly in a blogger object?\n  var [id, setID] = React.useState(\"\");\n  var [name, setName] = React.useState([]);\n  var [city, setCity] = React.useState(\"\");\n\n  const dbGet = id => {\n    axios.get(`http://localhost:3001/blogger/${id}`).then(res => {\n      // console.log(response.headers.name + \"we're logging line 17\")\n      setName(res.data.name);\n      setCity(res.data.city); // setName(res.name);\n    }); // return console.log(response + \" on line 20\");\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dbGet(id); // No logo on the submit blog page so I have removed it.\n    // props.logoSpeedUp();\n  };\n\n  const displayBlogs = (id, name, city) => {\n    //Handle errors\n    const blogsToDisplay = []; //map through array of blogs and display them\n\n    name.map((id, name, city) => {\n      const x = /*#__PURE__*/_jsxDEV(DisplayBlog, {\n        name: name,\n        city: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n\n      blogsToDisplay.push(x);\n    });\n    return /*#__PURE__*/_jsxDEV(DisplayBlog, {\n      name: name,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DBGetForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Get a record from the database:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Blogger ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"id\",\n          name: \"id\",\n          value: id,\n          onChange: n => setID(n.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dbDisplay\",\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dbDisplay\",\n      children: [\"City: \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), displayBlogs(id, name, city)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DBPostForm, \"rAriJMEveKJsC3O/5mrWQHQVz+Y=\");\n\n_c = DBPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DBPostForm\");","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/src/client/components/DBGetForm/DBGetForm.js"],"names":["React","axios","DisplayBlog","getDefaultNormalizer","DBPostForm","props","id","setID","useState","name","setName","city","setCity","dbGet","get","then","res","data","handleSubmit","event","preventDefault","displayBlogs","blogsToDisplay","map","x","push","n","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,oBAAT,QAAqC,sBAArC;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAExC;AACA,MAAI,CAACC,EAAD,EAAKC,KAAL,IAAcP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAlB;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtB;AACA,MAAI,CAACG,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtB;;AAEA,QAAMK,KAAK,GAAIP,EAAD,IAAQ;AACpBL,IAAAA,KAAK,CACFa,GADH,CACQ,iCAAgCR,EAAG,EAD3C,EAEGS,IAFH,CAESC,GAAD,IAAS;AACb;AACAN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASR,IAAV,CAAP;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,CAASN,IAAV,CAAP,CAHa,CAIb;AACD,KAPH,EADoB,CASlB;AACH,GAVD;;AAYA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,KAAK,CAACP,EAAD,CAAL,CAF8B,CAG9B;AACA;AACD,GALD;;AAOA,QAAMe,YAAY,GAAG,CAACf,EAAD,EAAKG,IAAL,EAAWE,IAAX,KAAoB;AACvC;AACA,UAAMW,cAAc,GAAG,EAAvB,CAFuC,CAIvC;;AACAb,IAAAA,IAAI,CAACc,GAAL,CAAS,CAACjB,EAAD,EAAKG,IAAL,EAAWE,IAAX,KAAoB;AAC3B,YAAMa,CAAC,gBAAG,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEf,IAAnB;AAAyB,QAAA,IAAI,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAV;;AACAW,MAAAA,cAAc,CAACG,IAAf,CAAoBD,CAApB;AACD,KAHD;AAIA,wBAAO,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEf,IAAnB;AAAyB,MAAA,IAAI,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEO,YAAhB;AAAA,8BACE;AAAA,+CAEE;AACE,UAAA,IAAI,EAAC,IADP;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,KAAK,EAAEZ,EAHT;AAIE,UAAA,QAAQ,EAAGoB,CAAD,IAAOnB,KAAK,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJxB;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,2BACSnB,IADT;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,2BACSE,IADT;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAqBGU,YAAY,CAACf,EAAD,EAAKG,IAAL,EAAWE,IAAX,CArBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA/DuBP,U;;KAAAA,U","sourcesContent":["import React from \"react\";\nimport \"./DBGetForm.css\";\nimport axios from \"axios\";\nimport DisplayBlog from \"../DisplayBlog/DisplayBlog\";\nimport { getDefaultNormalizer } from \"@testing-library/dom\";\n\nexport default function DBPostForm(props) {\n\n  //improvement suggestion - could our state could be stored directly in a blogger object?\n  var [id, setID] = React.useState(\"\");\n  var [name, setName] = React.useState([]);\n  var [city, setCity] = React.useState(\"\");\n\n  const dbGet = (id) => {\n    axios\n      .get(`http://localhost:3001/blogger/${id}`)\n      .then((res) => {\n        // console.log(response.headers.name + \"we're logging line 17\")\n        setName(res.data.name);\n        setCity(res.data.city);\n        // setName(res.name);\n      });\n      // return console.log(response + \" on line 20\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();   \n    dbGet(id);\n    // No logo on the submit blog page so I have removed it.\n    // props.logoSpeedUp();\n  };\n\n  const displayBlogs = (id, name, city) => {\n    //Handle errors\n    const blogsToDisplay = [];\n    \n    //map through array of blogs and display them\n    name.map((id, name, city) => {\n      const x = <DisplayBlog name={name} city={city} />\n      blogsToDisplay.push(x)\n    })\n    return <DisplayBlog name={name} city={city} />\n  }\n\n  return (\n    <div className=\"DBGetForm\">\n      <h3>Get a record from the database:</h3>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Blogger ID:\n          <input\n            type=\"id\"\n            name=\"id\"\n            value={id}\n            onChange={(n) => setID(n.target.value)}\n            required\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <div className=\"dbDisplay\">\n        Name: {name}\n      </div>\n      <div className=\"dbDisplay\">\n        City: {city}\n      </div>\n      {displayBlogs(id, name, city)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
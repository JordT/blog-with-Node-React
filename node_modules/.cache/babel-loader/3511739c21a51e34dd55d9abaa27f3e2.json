{"ast":null,"code":"var fails = require('../internals/fails');\n\nvar isCallable = require('../internals/is-callable');\n\nvar classof = require('../internals/classof');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar inspectSource = require('../internals/inspect-source');\n\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = constructorRegExp.exec;\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(function () {\n  /* empty */\n});\n\nvar isConstructorModern = function (argument) {\n  if (!isCallable(argument)) return false;\n\n  try {\n    construct(Object, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function (argument) {\n  if (!isCallable(argument)) return false;\n\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction':\n      return false;\n    // we can't check .prototype since constructors produced by .bind haven't it\n  }\n\n  return INCORRECT_TO_STRING || !!exec.call(constructorRegExp, inspectSource(argument));\n}; // `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\n\n\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {\n    called = true;\n  }) || called;\n}) ? isConstructorLegacy : isConstructorModern;","map":{"version":3,"sources":["/Users/adamheeps/development/blog-with-Node-React/node_modules/core-js-pure/internals/is-constructor.js"],"names":["fails","require","isCallable","classof","getBuiltIn","inspectSource","empty","construct","constructorRegExp","exec","INCORRECT_TO_STRING","isConstructorModern","argument","Object","error","isConstructorLegacy","call","module","exports","called"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,6BAAD,CAA3B;;AAEA,IAAIK,KAAK,GAAG,EAAZ;AACA,IAAIC,SAAS,GAAGH,UAAU,CAAC,SAAD,EAAY,WAAZ,CAA1B;AACA,IAAII,iBAAiB,GAAG,0BAAxB;AACA,IAAIC,IAAI,GAAGD,iBAAiB,CAACC,IAA7B;AACA,IAAIC,mBAAmB,GAAG,CAACF,iBAAiB,CAACC,IAAlB,CAAuB,YAAY;AAAE;AAAa,CAAlD,CAA3B;;AAEA,IAAIE,mBAAmB,GAAG,UAAUC,QAAV,EAAoB;AAC5C,MAAI,CAACV,UAAU,CAACU,QAAD,CAAf,EAA2B,OAAO,KAAP;;AAC3B,MAAI;AACFL,IAAAA,SAAS,CAACM,MAAD,EAASP,KAAT,EAAgBM,QAAhB,CAAT;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAO,KAAP;AACD;AACF,CARD;;AAUA,IAAIC,mBAAmB,GAAG,UAAUH,QAAV,EAAoB;AAC5C,MAAI,CAACV,UAAU,CAACU,QAAD,CAAf,EAA2B,OAAO,KAAP;;AAC3B,UAAQT,OAAO,CAACS,QAAD,CAAf;AACE,SAAK,eAAL;AACA,SAAK,mBAAL;AACA,SAAK,wBAAL;AAA+B,aAAO,KAAP;AAC/B;AAJF;;AAKE,SAAOF,mBAAmB,IAAI,CAAC,CAACD,IAAI,CAACO,IAAL,CAAUR,iBAAV,EAA6BH,aAAa,CAACO,QAAD,CAA1C,CAAhC;AACH,CARD,C,CAUA;AACA;;;AACAK,MAAM,CAACC,OAAP,GAAiB,CAACX,SAAD,IAAcP,KAAK,CAAC,YAAY;AAC/C,MAAImB,MAAJ;AACA,SAAOR,mBAAmB,CAACA,mBAAmB,CAACK,IAArB,CAAnB,IACF,CAACL,mBAAmB,CAACE,MAAD,CADlB,IAEF,CAACF,mBAAmB,CAAC,YAAY;AAAEQ,IAAAA,MAAM,GAAG,IAAT;AAAgB,GAA/B,CAFlB,IAGFA,MAHL;AAID,CANmC,CAAnB,GAMZJ,mBANY,GAMUJ,mBAN3B","sourcesContent":["var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = constructorRegExp.exec;\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(function () { /* empty */ });\n\nvar isConstructorModern = function (argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(Object, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function (argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n    // we can't check .prototype since constructors produced by .bind haven't it\n  } return INCORRECT_TO_STRING || !!exec.call(constructorRegExp, inspectSource(argument));\n};\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"module.exports.watch = watch;\nmodule.exports.resetWatchers = resetWatchers;\n\nvar debug = require('debug')('nodemon:watch');\n\nvar debugRoot = require('debug')('nodemon');\n\nvar chokidar = require('chokidar');\n\nvar undefsafe = require('undefsafe');\n\nvar config = require('../config');\n\nvar path = require('path');\n\nvar utils = require('../utils');\n\nvar bus = utils.bus;\n\nvar match = require('./match');\n\nvar watchers = [];\nvar debouncedBus;\nbus.on('reset', resetWatchers);\n\nfunction resetWatchers() {\n  debugRoot('resetting watchers');\n  watchers.forEach(function (watcher) {\n    watcher.close();\n  });\n  watchers = [];\n}\n\nfunction watch() {\n  if (watchers.length) {\n    debug('early exit on watch, still watching (%s)', watchers.length);\n    return;\n  }\n\n  var dirs = [].slice.call(config.dirs);\n  debugRoot('start watch on: %s', dirs.join(', '));\n  const rootIgnored = config.options.ignore;\n  debugRoot('ignored', rootIgnored);\n  var watchedFiles = [];\n  const promise = new Promise(function (resolve) {\n    const dotFilePattern = /[/\\\\]\\./;\n    var ignored = match.rulesToMonitor([], // not needed\n    Array.from(rootIgnored), config).map(pattern => pattern.slice(1));\n    const addDotFile = dirs.filter(dir => dir.match(dotFilePattern)); // don't ignore dotfiles if explicitly watched.\n\n    if (addDotFile.length === 0) {\n      ignored.push(dotFilePattern);\n    }\n\n    var watchOptions = {\n      ignorePermissionErrors: true,\n      ignored: ignored,\n      persistent: true,\n      usePolling: config.options.legacyWatch || false,\n      interval: config.options.pollingInterval // note to future developer: I've gone back and forth on adding `cwd`\n      // to the props and in some cases it fixes bugs but typically it causes\n      // bugs elsewhere (since nodemon is used is so many ways). the final\n      // decision is to *not* use it at all and work around it\n      // cwd: ...\n\n    };\n\n    if (utils.isWindows) {\n      watchOptions.disableGlobbing = true;\n    }\n\n    if (process.env.TEST) {\n      watchOptions.useFsEvents = false;\n    }\n\n    var watcher = chokidar.watch(dirs, Object.assign({}, watchOptions, config.options.watchOptions || {}));\n    watcher.ready = false;\n    var total = 0;\n    watcher.on('change', filterAndRestart);\n    watcher.on('add', function (file) {\n      if (watcher.ready) {\n        return filterAndRestart(file);\n      }\n\n      watchedFiles.push(file);\n      bus.emit('watching', file);\n      debug('chokidar watching: %s', file);\n    });\n    watcher.on('ready', function () {\n      watchedFiles = Array.from(new Set(watchedFiles)); // ensure no dupes\n\n      total = watchedFiles.length;\n      watcher.ready = true;\n      resolve(total);\n      debugRoot('watch is complete');\n    });\n    watcher.on('error', function (error) {\n      if (error.code === 'EINVAL') {\n        utils.log.error('Internal watch failed. Likely cause: too many ' + 'files being watched (perhaps from the root of a drive?\\n' + 'See https://github.com/paulmillr/chokidar/issues/229 for details');\n      } else {\n        utils.log.error('Internal watch failed: ' + error.message);\n        process.exit(1);\n      }\n    });\n    watchers.push(watcher);\n  });\n  return promise.catch(e => {\n    // this is a core error and it should break nodemon - so I have to break\n    // out of a promise using the setTimeout\n    setTimeout(() => {\n      throw e;\n    });\n  }).then(function () {\n    utils.log.detail(`watching ${watchedFiles.length} file${watchedFiles.length === 1 ? '' : 's'}`);\n    return watchedFiles;\n  });\n}\n\nfunction filterAndRestart(files) {\n  if (!Array.isArray(files)) {\n    files = [files];\n  }\n\n  if (files.length) {\n    var cwd = process.cwd();\n\n    if (this.options && this.options.cwd) {\n      cwd = this.options.cwd;\n    }\n\n    utils.log.detail('files triggering change check: ' + files.map(file => {\n      const res = path.relative(cwd, file);\n      return res;\n    }).join(', ')); // make sure the path is right and drop an empty\n    // filenames (sometimes on windows)\n\n    files = files.filter(Boolean).map(file => {\n      return path.relative(process.cwd(), path.relative(cwd, file));\n    });\n\n    if (utils.isWindows) {\n      // ensure the drive letter is in uppercase (c:\\foo -> C:\\foo)\n      files = files.map(f => {\n        if (f.indexOf(':') === -1) {\n          return f;\n        }\n\n        return f[0].toUpperCase() + f.slice(1);\n      });\n    }\n\n    debug('filterAndRestart on', files);\n    var matched = match(files, config.options.monitor, undefsafe(config, 'options.execOptions.ext'));\n    debug('matched?', JSON.stringify(matched)); // if there's no matches, then test to see if the changed file is the\n    // running script, if so, let's allow a restart\n\n    if (config.options.execOptions && config.options.execOptions.script) {\n      const script = path.resolve(config.options.execOptions.script);\n\n      if (matched.result.length === 0 && script) {\n        const length = script.length;\n        files.find(file => {\n          if (file.substr(-length, length) === script) {\n            matched = {\n              result: [file],\n              total: 1\n            };\n            return true;\n          }\n        });\n      }\n    }\n\n    utils.log.detail('changes after filters (before/after): ' + [files.length, matched.result.length].join('/')); // reset the last check so we're only looking at recently modified files\n\n    config.lastStarted = Date.now();\n\n    if (matched.result.length) {\n      if (config.options.delay > 0) {\n        utils.log.detail('delaying restart for ' + config.options.delay + 'ms');\n\n        if (debouncedBus === undefined) {\n          debouncedBus = debounce(restartBus, config.options.delay);\n        }\n\n        debouncedBus(matched);\n      } else {\n        return restartBus(matched);\n      }\n    }\n  }\n}\n\nfunction restartBus(matched) {\n  utils.log.status('restarting due to changes...');\n  matched.result.map(file => {\n    utils.log.detail(path.relative(process.cwd(), file));\n  });\n\n  if (config.options.verbose) {\n    utils.log._log('');\n  }\n\n  bus.emit('restart', matched.result);\n}\n\nfunction debounce(fn, delay) {\n  var timer = null;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => fn.apply(context, args), delay);\n  };\n}","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/node_modules/nodemon/lib/monitor/watch.js"],"names":["module","exports","watch","resetWatchers","debug","require","debugRoot","chokidar","undefsafe","config","path","utils","bus","match","watchers","debouncedBus","on","forEach","watcher","close","length","dirs","slice","call","join","rootIgnored","options","ignore","watchedFiles","promise","Promise","resolve","dotFilePattern","ignored","rulesToMonitor","Array","from","map","pattern","addDotFile","filter","dir","push","watchOptions","ignorePermissionErrors","persistent","usePolling","legacyWatch","interval","pollingInterval","isWindows","disableGlobbing","process","env","TEST","useFsEvents","Object","assign","ready","total","filterAndRestart","file","emit","Set","error","code","log","message","exit","catch","e","setTimeout","then","detail","files","isArray","cwd","res","relative","Boolean","f","indexOf","toUpperCase","matched","monitor","JSON","stringify","execOptions","script","result","find","substr","lastStarted","Date","now","delay","undefined","debounce","restartBus","status","verbose","_log","fn","timer","context","args","arguments","clearTimeout","apply"],"mappings":"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","sourcesContent":["module.exports.watch = watch;\nmodule.exports.resetWatchers = resetWatchers;\n\nvar debug = require('debug')('nodemon:watch');\nvar debugRoot = require('debug')('nodemon');\nvar chokidar = require('chokidar');\nvar undefsafe = require('undefsafe');\nvar config = require('../config');\nvar path = require('path');\nvar utils = require('../utils');\nvar bus = utils.bus;\nvar match = require('./match');\nvar watchers = [];\nvar debouncedBus;\n\nbus.on('reset', resetWatchers);\n\nfunction resetWatchers() {\n  debugRoot('resetting watchers');\n  watchers.forEach(function (watcher) {\n    watcher.close();\n  });\n  watchers = [];\n}\n\nfunction watch() {\n  if (watchers.length) {\n    debug('early exit on watch, still watching (%s)', watchers.length);\n    return;\n  }\n\n  var dirs = [].slice.call(config.dirs);\n\n  debugRoot('start watch on: %s', dirs.join(', '));\n  const rootIgnored = config.options.ignore;\n  debugRoot('ignored', rootIgnored);\n\n  var watchedFiles = [];\n\n  const promise = new Promise(function (resolve) {\n    const dotFilePattern = /[/\\\\]\\./;\n    var ignored = match.rulesToMonitor(\n      [], // not needed\n      Array.from(rootIgnored),\n      config\n    ).map(pattern => pattern.slice(1));\n\n    const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n\n    // don't ignore dotfiles if explicitly watched.\n    if (addDotFile.length === 0) {\n      ignored.push(dotFilePattern);\n    }\n\n    var watchOptions = {\n      ignorePermissionErrors: true,\n      ignored: ignored,\n      persistent: true,\n      usePolling: config.options.legacyWatch || false,\n      interval: config.options.pollingInterval,\n      // note to future developer: I've gone back and forth on adding `cwd`\n      // to the props and in some cases it fixes bugs but typically it causes\n      // bugs elsewhere (since nodemon is used is so many ways). the final\n      // decision is to *not* use it at all and work around it\n      // cwd: ...\n    };\n\n    if (utils.isWindows) {\n      watchOptions.disableGlobbing = true;\n    }\n\n    if (process.env.TEST) {\n      watchOptions.useFsEvents = false;\n    }\n\n    var watcher = chokidar.watch(\n      dirs,\n      Object.assign({}, watchOptions, config.options.watchOptions || {})\n    );\n\n    watcher.ready = false;\n\n    var total = 0;\n\n    watcher.on('change', filterAndRestart);\n    watcher.on('add', function (file) {\n      if (watcher.ready) {\n        return filterAndRestart(file);\n      }\n\n      watchedFiles.push(file);\n      bus.emit('watching', file);\n      debug('chokidar watching: %s', file);\n    });\n    watcher.on('ready', function () {\n      watchedFiles = Array.from(new Set(watchedFiles)); // ensure no dupes\n      total = watchedFiles.length;\n      watcher.ready = true;\n      resolve(total);\n      debugRoot('watch is complete');\n    });\n\n    watcher.on('error', function (error) {\n      if (error.code === 'EINVAL') {\n        utils.log.error(\n          'Internal watch failed. Likely cause: too many ' +\n          'files being watched (perhaps from the root of a drive?\\n' +\n          'See https://github.com/paulmillr/chokidar/issues/229 for details'\n        );\n      } else {\n        utils.log.error('Internal watch failed: ' + error.message);\n        process.exit(1);\n      }\n    });\n\n    watchers.push(watcher);\n  });\n\n  return promise.catch(e => {\n    // this is a core error and it should break nodemon - so I have to break\n    // out of a promise using the setTimeout\n    setTimeout(() => {\n      throw e;\n    });\n  }).then(function () {\n    utils.log.detail(`watching ${watchedFiles.length} file${\n      watchedFiles.length === 1 ? '' : 's'}`);\n    return watchedFiles;\n  });\n}\n\nfunction filterAndRestart(files) {\n  if (!Array.isArray(files)) {\n    files = [files];\n  }\n\n  if (files.length) {\n    var cwd = process.cwd();\n    if (this.options && this.options.cwd) {\n      cwd = this.options.cwd;\n    }\n\n    utils.log.detail(\n      'files triggering change check: ' +\n      files\n        .map(file => {\n          const res = path.relative(cwd, file);\n          return res;\n        })\n        .join(', ')\n    );\n\n    // make sure the path is right and drop an empty\n    // filenames (sometimes on windows)\n    files = files.filter(Boolean).map(file => {\n      return path.relative(process.cwd(), path.relative(cwd, file));\n    });\n\n    if (utils.isWindows) {\n      // ensure the drive letter is in uppercase (c:\\foo -> C:\\foo)\n      files = files.map(f => {\n        if (f.indexOf(':') === -1) { return f; }\n        return f[0].toUpperCase() + f.slice(1);\n      });\n    }\n\n\n    debug('filterAndRestart on', files);\n\n    var matched = match(\n      files,\n      config.options.monitor,\n      undefsafe(config, 'options.execOptions.ext')\n    );\n\n    debug('matched?', JSON.stringify(matched));\n\n    // if there's no matches, then test to see if the changed file is the\n    // running script, if so, let's allow a restart\n    if (config.options.execOptions && config.options.execOptions.script) {\n      const script = path.resolve(config.options.execOptions.script);\n      if (matched.result.length === 0 && script) {\n        const length = script.length;\n        files.find(file => {\n          if (file.substr(-length, length) === script) {\n            matched = {\n              result: [file],\n              total: 1,\n            };\n            return true;\n          }\n        });\n      }\n    }\n\n    utils.log.detail(\n      'changes after filters (before/after): ' +\n      [files.length, matched.result.length].join('/')\n    );\n\n    // reset the last check so we're only looking at recently modified files\n    config.lastStarted = Date.now();\n\n    if (matched.result.length) {\n      if (config.options.delay > 0) {\n        utils.log.detail('delaying restart for ' + config.options.delay + 'ms');\n        if (debouncedBus === undefined) {\n          debouncedBus = debounce(restartBus, config.options.delay);\n        }\n        debouncedBus(matched);\n      } else {\n        return restartBus(matched);\n      }\n    }\n  }\n}\n\nfunction restartBus(matched) {\n  utils.log.status('restarting due to changes...');\n  matched.result.map(file => {\n    utils.log.detail(path.relative(process.cwd(), file));\n  });\n\n  if (config.options.verbose) {\n    utils.log._log('');\n  }\n\n  bus.emit('restart', matched.result);\n}\n\nfunction debounce(fn, delay) {\n  var timer = null;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() =>fn.apply(context, args), delay);\n  };\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nvar isExtglob = require('is-extglob');\n\nvar chars = {\n  '{': '}',\n  '(': ')',\n  '[': ']'\n};\n\nvar strictCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n\n        backSlashIndex = str.indexOf('\\\\', index);\n\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n\n  return false;\n};\n\nvar relaxedCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n\n  var index = 0;\n\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck; // optionally relax check\n\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/node_modules/is-glob/index.js"],"names":["isExtglob","require","chars","strictCheck","str","index","pipeIndex","closeSquareIndex","closeCurlyIndex","closeParenIndex","backSlashIndex","length","test","indexOf","open","close","n","relaxedCheck","module","exports","isGlob","options","check","strict"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIC,KAAK,GAAG;AAAE,OAAK,GAAP;AAAY,OAAK,GAAjB;AAAsB,OAAK;AAA3B,CAAZ;;AACA,IAAIC,WAAW,GAAG,UAASC,GAAT,EAAc;AAC9B,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClB,WAAO,IAAP;AACD;;AACD,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,SAAS,GAAG,CAAC,CAAjB;AACA,MAAIC,gBAAgB,GAAG,CAAC,CAAxB;AACA,MAAIC,eAAe,GAAG,CAAC,CAAvB;AACA,MAAIC,eAAe,GAAG,CAAC,CAAvB;AACA,MAAIC,cAAc,GAAG,CAAC,CAAtB;;AACA,SAAOL,KAAK,GAAGD,GAAG,CAACO,MAAnB,EAA2B;AACzB,QAAIP,GAAG,CAACC,KAAD,CAAH,KAAe,GAAnB,EAAwB;AACtB,aAAO,IAAP;AACD;;AAED,QAAID,GAAG,CAACC,KAAK,GAAG,CAAT,CAAH,KAAmB,GAAnB,IAA0B,UAAUO,IAAV,CAAeR,GAAG,CAACC,KAAD,CAAlB,CAA9B,EAA0D;AACxD,aAAO,IAAP;AACD;;AAED,QAAIE,gBAAgB,KAAK,CAAC,CAAtB,IAA2BH,GAAG,CAACC,KAAD,CAAH,KAAe,GAA1C,IAAiDD,GAAG,CAACC,KAAK,GAAG,CAAT,CAAH,KAAmB,GAAxE,EAA6E;AAC3E,UAAIE,gBAAgB,GAAGF,KAAvB,EAA8B;AAC5BE,QAAAA,gBAAgB,GAAGH,GAAG,CAACS,OAAJ,CAAY,GAAZ,EAAiBR,KAAjB,CAAnB;AACD;;AACD,UAAIE,gBAAgB,GAAGF,KAAvB,EAA8B;AAC5B,YAAIK,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,GAAGH,gBAA9C,EAAgE;AAC9D,iBAAO,IAAP;AACD;;AACDG,QAAAA,cAAc,GAAGN,GAAG,CAACS,OAAJ,CAAY,IAAZ,EAAkBR,KAAlB,CAAjB;;AACA,YAAIK,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,GAAGH,gBAA9C,EAAgE;AAC9D,iBAAO,IAAP;AACD;AACF;AACF;;AAED,QAAIC,eAAe,KAAK,CAAC,CAArB,IAA0BJ,GAAG,CAACC,KAAD,CAAH,KAAe,GAAzC,IAAgDD,GAAG,CAACC,KAAK,GAAG,CAAT,CAAH,KAAmB,GAAvE,EAA4E;AAC1EG,MAAAA,eAAe,GAAGJ,GAAG,CAACS,OAAJ,CAAY,GAAZ,EAAiBR,KAAjB,CAAlB;;AACA,UAAIG,eAAe,GAAGH,KAAtB,EAA6B;AAC3BK,QAAAA,cAAc,GAAGN,GAAG,CAACS,OAAJ,CAAY,IAAZ,EAAkBR,KAAlB,CAAjB;;AACA,YAAIK,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,GAAGF,eAA9C,EAA+D;AAC7D,iBAAO,IAAP;AACD;AACF;AACF;;AAED,QAAIC,eAAe,KAAK,CAAC,CAArB,IAA0BL,GAAG,CAACC,KAAD,CAAH,KAAe,GAAzC,IAAgDD,GAAG,CAACC,KAAK,GAAG,CAAT,CAAH,KAAmB,GAAnE,IAA0E,QAAQO,IAAR,CAAaR,GAAG,CAACC,KAAK,GAAG,CAAT,CAAhB,CAA1E,IAA0GD,GAAG,CAACC,KAAK,GAAG,CAAT,CAAH,KAAmB,GAAjI,EAAsI;AACpII,MAAAA,eAAe,GAAGL,GAAG,CAACS,OAAJ,CAAY,GAAZ,EAAiBR,KAAjB,CAAlB;;AACA,UAAII,eAAe,GAAGJ,KAAtB,EAA6B;AAC3BK,QAAAA,cAAc,GAAGN,GAAG,CAACS,OAAJ,CAAY,IAAZ,EAAkBR,KAAlB,CAAjB;;AACA,YAAIK,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,GAAGD,eAA9C,EAA+D;AAC7D,iBAAO,IAAP;AACD;AACF;AACF;;AAED,QAAIH,SAAS,KAAK,CAAC,CAAf,IAAoBF,GAAG,CAACC,KAAD,CAAH,KAAe,GAAnC,IAA0CD,GAAG,CAACC,KAAK,GAAG,CAAT,CAAH,KAAmB,GAAjE,EAAsE;AACpE,UAAIC,SAAS,GAAGD,KAAhB,EAAuB;AACrBC,QAAAA,SAAS,GAAGF,GAAG,CAACS,OAAJ,CAAY,GAAZ,EAAiBR,KAAjB,CAAZ;AACD;;AACD,UAAIC,SAAS,KAAK,CAAC,CAAf,IAAoBF,GAAG,CAACE,SAAS,GAAG,CAAb,CAAH,KAAuB,GAA/C,EAAoD;AAClDG,QAAAA,eAAe,GAAGL,GAAG,CAACS,OAAJ,CAAY,GAAZ,EAAiBP,SAAjB,CAAlB;;AACA,YAAIG,eAAe,GAAGH,SAAtB,EAAiC;AAC/BI,UAAAA,cAAc,GAAGN,GAAG,CAACS,OAAJ,CAAY,IAAZ,EAAkBP,SAAlB,CAAjB;;AACA,cAAII,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,GAAGD,eAA9C,EAA+D;AAC7D,mBAAO,IAAP;AACD;AACF;AACF;AACF;;AAED,QAAIL,GAAG,CAACC,KAAD,CAAH,KAAe,IAAnB,EAAyB;AACvB,UAAIS,IAAI,GAAGV,GAAG,CAACC,KAAK,GAAG,CAAT,CAAd;AACAA,MAAAA,KAAK,IAAI,CAAT;AACA,UAAIU,KAAK,GAAGb,KAAK,CAACY,IAAD,CAAjB;;AAEA,UAAIC,KAAJ,EAAW;AACT,YAAIC,CAAC,GAAGZ,GAAG,CAACS,OAAJ,CAAYE,KAAZ,EAAmBV,KAAnB,CAAR;;AACA,YAAIW,CAAC,KAAK,CAAC,CAAX,EAAc;AACZX,UAAAA,KAAK,GAAGW,CAAC,GAAG,CAAZ;AACD;AACF;;AAED,UAAIZ,GAAG,CAACC,KAAD,CAAH,KAAe,GAAnB,EAAwB;AACtB,eAAO,IAAP;AACD;AACF,KAfD,MAeO;AACLA,MAAAA,KAAK;AACN;AACF;;AACD,SAAO,KAAP;AACD,CAzFD;;AA2FA,IAAIY,YAAY,GAAG,UAASb,GAAT,EAAc;AAC/B,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClB,WAAO,IAAP;AACD;;AACD,MAAIC,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAGD,GAAG,CAACO,MAAnB,EAA2B;AACzB,QAAI,cAAcC,IAAd,CAAmBR,GAAG,CAACC,KAAD,CAAtB,CAAJ,EAAoC;AAClC,aAAO,IAAP;AACD;;AAED,QAAID,GAAG,CAACC,KAAD,CAAH,KAAe,IAAnB,EAAyB;AACvB,UAAIS,IAAI,GAAGV,GAAG,CAACC,KAAK,GAAG,CAAT,CAAd;AACAA,MAAAA,KAAK,IAAI,CAAT;AACA,UAAIU,KAAK,GAAGb,KAAK,CAACY,IAAD,CAAjB;;AAEA,UAAIC,KAAJ,EAAW;AACT,YAAIC,CAAC,GAAGZ,GAAG,CAACS,OAAJ,CAAYE,KAAZ,EAAmBV,KAAnB,CAAR;;AACA,YAAIW,CAAC,KAAK,CAAC,CAAX,EAAc;AACZX,UAAAA,KAAK,GAAGW,CAAC,GAAG,CAAZ;AACD;AACF;;AAED,UAAIZ,GAAG,CAACC,KAAD,CAAH,KAAe,GAAnB,EAAwB;AACtB,eAAO,IAAP;AACD;AACF,KAfD,MAeO;AACLA,MAAAA,KAAK;AACN;AACF;;AACD,SAAO,KAAP;AACD,CA9BD;;AAgCAa,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBhB,GAAhB,EAAqBiB,OAArB,EAA8B;AAC7C,MAAI,OAAOjB,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAvC,EAA2C;AACzC,WAAO,KAAP;AACD;;AAED,MAAIJ,SAAS,CAACI,GAAD,CAAb,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAIkB,KAAK,GAAGnB,WAAZ,CAT6C,CAW7C;;AACA,MAAIkB,OAAO,IAAIA,OAAO,CAACE,MAAR,KAAmB,KAAlC,EAAyC;AACvCD,IAAAA,KAAK,GAAGL,YAAR;AACD;;AAED,SAAOK,KAAK,CAAClB,GAAD,CAAZ;AACD,CAjBD","sourcesContent":["/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n"]},"metadata":{},"sourceType":"script"}
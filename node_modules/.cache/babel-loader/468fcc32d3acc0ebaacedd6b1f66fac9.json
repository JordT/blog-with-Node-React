{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n/**\n * Parse the nodemon config file, supporting both old style\n * plain text config file, and JSON version of the config\n *\n * @param  {String}   filename\n * @param  {Function} callback\n */\n\n\nfunction parse(filename, callback) {\n  var rules = {\n    ignore: [],\n    watch: []\n  };\n  fs.readFile(filename, 'utf8', function (err, content) {\n    if (err) {\n      return callback(err);\n    }\n\n    var json = null;\n\n    try {\n      json = JSON.parse(content);\n    } catch (e) {}\n\n    if (json !== null) {\n      rules = {\n        ignore: json.ignore || [],\n        watch: json.watch || []\n      };\n      return callback(null, rules);\n    } // otherwise return the raw file\n\n\n    return callback(null, {\n      raw: content.split(/\\n/)\n    });\n  });\n}\n\nmodule.exports = parse;","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/node_modules/nodemon/lib/rules/parse.js"],"names":["fs","require","parse","filename","callback","rules","ignore","watch","readFile","err","content","json","JSON","e","raw","split","module","exports"],"mappings":"AAAA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,KAAK,GAAG;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,KAAK,EAAE;AAFG,GAAZ;AAKAP,EAAAA,EAAE,CAACQ,QAAH,CAAYL,QAAZ,EAAsB,MAAtB,EAA8B,UAAUM,GAAV,EAAeC,OAAf,EAAwB;AAEpD,QAAID,GAAJ,EAAS;AACP,aAAOL,QAAQ,CAACK,GAAD,CAAf;AACD;;AAED,QAAIE,IAAI,GAAG,IAAX;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAGC,IAAI,CAACV,KAAL,CAAWQ,OAAX,CAAP;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU,CAAE;;AAEd,QAAIF,IAAI,KAAK,IAAb,EAAmB;AACjBN,MAAAA,KAAK,GAAG;AACNC,QAAAA,MAAM,EAAEK,IAAI,CAACL,MAAL,IAAe,EADjB;AAENC,QAAAA,KAAK,EAAEI,IAAI,CAACJ,KAAL,IAAc;AAFf,OAAR;AAKA,aAAOH,QAAQ,CAAC,IAAD,EAAOC,KAAP,CAAf;AACD,KAlBmD,CAoBpD;;;AACA,WAAOD,QAAQ,CAAC,IAAD,EAAO;AAAEU,MAAAA,GAAG,EAAEJ,OAAO,CAACK,KAAR,CAAc,IAAd;AAAP,KAAP,CAAf;AACD,GAtBD;AAuBD;;AAEDC,MAAM,CAACC,OAAP,GAAiBf,KAAjB","sourcesContent":["'use strict';\nvar fs = require('fs');\n\n/**\n * Parse the nodemon config file, supporting both old style\n * plain text config file, and JSON version of the config\n *\n * @param  {String}   filename\n * @param  {Function} callback\n */\nfunction parse(filename, callback) {\n  var rules = {\n    ignore: [],\n    watch: [],\n  };\n\n  fs.readFile(filename, 'utf8', function (err, content) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    var json = null;\n    try {\n      json = JSON.parse(content);\n    } catch (e) {}\n\n    if (json !== null) {\n      rules = {\n        ignore: json.ignore || [],\n        watch: json.watch || [],\n      };\n\n      return callback(null, rules);\n    }\n\n    // otherwise return the raw file\n    return callback(null, { raw: content.split(/\\n/) });\n  });\n}\n\nmodule.exports = parse;\n\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\n\nvar add = require('./add');\n\nvar parse = require('./parse'); // exported\n\n\nvar rules = {\n  ignore: [],\n  watch: []\n};\n/**\n * Loads a nodemon config file and populates the ignore\n * and watch rules with it's contents, and calls callback\n * with the new rules\n *\n * @param  {String} filename\n * @param  {Function} callback\n */\n\nfunction load(filename, callback) {\n  parse(filename, function (err, result) {\n    if (err) {\n      // we should have bombed already, but\n      utils.log.error(err);\n      callback(err);\n    }\n\n    if (result.raw) {\n      result.raw.forEach(add.bind(null, rules, 'ignore'));\n    } else {\n      result.ignore.forEach(add.bind(null, rules, 'ignore'));\n      result.watch.forEach(add.bind(null, rules, 'watch'));\n    }\n\n    callback(null, rules);\n  });\n}\n\nmodule.exports = {\n  reset: function () {\n    // just used for testing\n    rules.ignore.length = rules.watch.length = 0;\n    delete rules.ignore.re;\n    delete rules.watch.re;\n  },\n  load: load,\n  ignore: {\n    test: add.bind(null, rules, 'ignore'),\n    add: add.bind(null, rules, 'ignore')\n  },\n  watch: {\n    test: add.bind(null, rules, 'watch'),\n    add: add.bind(null, rules, 'watch')\n  },\n  add: add.bind(null, rules),\n  rules: rules\n};","map":{"version":3,"sources":["/Users/jordanthomson/code/blog-with-Node-React/node_modules/nodemon/lib/rules/index.js"],"names":["utils","require","add","parse","rules","ignore","watch","load","filename","callback","err","result","log","error","raw","forEach","bind","module","exports","reset","length","re","test"],"mappings":"AAAA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;;;AACA,IAAIG,KAAK,GAAG;AAAEC,EAAAA,MAAM,EAAE,EAAV;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,EAAkC;AAChCN,EAAAA,KAAK,CAACK,QAAD,EAAW,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACrC,QAAID,GAAJ,EAAS;AACP;AACAV,MAAAA,KAAK,CAACY,GAAN,CAAUC,KAAV,CAAgBH,GAAhB;AACAD,MAAAA,QAAQ,CAACC,GAAD,CAAR;AACD;;AAED,QAAIC,MAAM,CAACG,GAAX,EAAgB;AACdH,MAAAA,MAAM,CAACG,GAAP,CAAWC,OAAX,CAAmBb,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,QAAtB,CAAnB;AACD,KAFD,MAEO;AACLO,MAAAA,MAAM,CAACN,MAAP,CAAcU,OAAd,CAAsBb,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,QAAtB,CAAtB;AACAO,MAAAA,MAAM,CAACL,KAAP,CAAaS,OAAb,CAAqBb,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,OAAtB,CAArB;AACD;;AAEDK,IAAAA,QAAQ,CAAC,IAAD,EAAOL,KAAP,CAAR;AACD,GAfI,CAAL;AAgBD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,KAAK,EAAE,YAAY;AAAE;AACnBf,IAAAA,KAAK,CAACC,MAAN,CAAae,MAAb,GAAsBhB,KAAK,CAACE,KAAN,CAAYc,MAAZ,GAAqB,CAA3C;AACA,WAAOhB,KAAK,CAACC,MAAN,CAAagB,EAApB;AACA,WAAOjB,KAAK,CAACE,KAAN,CAAYe,EAAnB;AACD,GALc;AAMfd,EAAAA,IAAI,EAAEA,IANS;AAOfF,EAAAA,MAAM,EAAE;AACNiB,IAAAA,IAAI,EAAEpB,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,QAAtB,CADA;AAENF,IAAAA,GAAG,EAAEA,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,QAAtB;AAFC,GAPO;AAWfE,EAAAA,KAAK,EAAE;AACLgB,IAAAA,IAAI,EAAEpB,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,OAAtB,CADD;AAELF,IAAAA,GAAG,EAAEA,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,EAAsB,OAAtB;AAFA,GAXQ;AAefF,EAAAA,GAAG,EAAEA,GAAG,CAACc,IAAJ,CAAS,IAAT,EAAeZ,KAAf,CAfU;AAgBfA,EAAAA,KAAK,EAAEA;AAhBQ,CAAjB","sourcesContent":["'use strict';\nvar utils = require('../utils');\nvar add = require('./add');\nvar parse = require('./parse');\n\n// exported\nvar rules = { ignore: [], watch: [] };\n\n/**\n * Loads a nodemon config file and populates the ignore\n * and watch rules with it's contents, and calls callback\n * with the new rules\n *\n * @param  {String} filename\n * @param  {Function} callback\n */\nfunction load(filename, callback) {\n  parse(filename, function (err, result) {\n    if (err) {\n      // we should have bombed already, but\n      utils.log.error(err);\n      callback(err);\n    }\n\n    if (result.raw) {\n      result.raw.forEach(add.bind(null, rules, 'ignore'));\n    } else {\n      result.ignore.forEach(add.bind(null, rules, 'ignore'));\n      result.watch.forEach(add.bind(null, rules, 'watch'));\n    }\n\n    callback(null, rules);\n  });\n}\n\nmodule.exports = {\n  reset: function () { // just used for testing\n    rules.ignore.length = rules.watch.length = 0;\n    delete rules.ignore.re;\n    delete rules.watch.re;\n  },\n  load: load,\n  ignore: {\n    test: add.bind(null, rules, 'ignore'),\n    add: add.bind(null, rules, 'ignore'),\n  },\n  watch: {\n    test: add.bind(null, rules, 'watch'),\n    add: add.bind(null, rules, 'watch'),\n  },\n  add: add.bind(null, rules),\n  rules: rules,\n};"]},"metadata":{},"sourceType":"script"}
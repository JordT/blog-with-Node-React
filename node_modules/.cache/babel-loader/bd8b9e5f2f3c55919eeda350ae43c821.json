{"ast":null,"code":"var anObject = require('../internals/an-object');\n\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar bind = require('../internals/function-bind-context');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    }\n\n    return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw TypeError(String(iterable) + ' is not iterable'); // optimisation for array iterators\n\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      }\n\n      return new Result(false);\n    }\n\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  }\n\n  return new Result(false);\n};","map":{"version":3,"sources":["/Users/adamheeps/development/blog-with-Node-React/node_modules/core-js-pure/internals/iterate.js"],"names":["anObject","require","isArrayIteratorMethod","lengthOfArrayLike","bind","getIterator","getIteratorMethod","iteratorClose","Result","stopped","result","module","exports","iterable","unboundFunction","options","that","AS_ENTRIES","IS_ITERATOR","INTERRUPTED","fn","iterator","iterFn","index","length","next","step","stop","condition","callFn","value","TypeError","String","call","done","error"],"mappings":"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","sourcesContent":["var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar bind = require('../internals/function-bind-context');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw TypeError(String(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n"]},"metadata":{},"sourceType":"script"}